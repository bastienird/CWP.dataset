[{"path":"https://bastienird.github.io/CWP.dataset/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Bastien Grasset Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/articles/first.html","id":"last-path-to-be-handled-in-workflow","dir":"Articles","previous_headings":"","what":"Last path to be handled in workflow","title":"First","text":"","code":"#' Extract Last Part of a File Path #' #' @description This function returns the last part of a file path after removing a specific suffix. #' @param x A character string representing the file path. #' @return A character string representing the last part of the file path. #' @export last_path <- function(x){   x <- gsub(\"/rds.rds\", \"\", x)   substr(x, max(gregexpr(\"/\", x)[[1]]) + 1, nchar(x)) }"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://bastienird.github.io/CWP.dataset/articles/first.html","id":"inflate-your-package","dir":"Articles","previous_headings":"","what":"Inflate your package","title":"First","text":"‚Äôre one inflate paper box. Build package Rmd using fusen::inflate() Verify \"DESCRIPTION\" file updated Verify function \"R/\" directory Verify test \"tests/testthat/\" directory Verify Rmd appears \"vignettes/\" directory","code":""},{"path":"https://bastienird.github.io/CWP.dataset/articles/go-further.html","id":"my_fun","dir":"Articles","previous_headings":"","what":"my_fun","title":"Go further","text":"","code":"my_fun() #> [1] 1"},{"path":"https://bastienird.github.io/CWP.dataset/articles/go-further.html","id":"package-structure","dir":"Articles","previous_headings":"my_fun","what":"Package structure","title":"Go further","text":"","code":"fusen::draw_package_structure() #> ‚îÄ‚îÄ No NAMESPACE file found there:  /home/runner/work/CWP.dataset/CWP.dataset/vig #>  #> +"},{"path":"https://bastienird.github.io/CWP.dataset/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bastien Grasset. Author, maintainer.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Grasset B (2025). CWP.dataset: Package Analyse Tidy Fisheries Dataset CWP Standards. R package version 0.1.2.4, https://bastienird.github.io/CWP.dataset, https://github.com/bastienird/CWP.dataset.","code":"@Manual{,   title = {CWP.dataset: Package to Analyse and Tidy Fisheries Dataset on CWP Standards},   author = {Bastien Grasset},   year = {2025},   note = {R package version 0.1.2.4,     https://bastienird.github.io/CWP.dataset},   url = {https://github.com/bastienird/CWP.dataset}, }"},{"path":"https://bastienird.github.io/CWP.dataset/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Package to Analyse and Tidy Fisheries Dataset on CWP Standards","text":"can install development version CWP.dataset GitHub :","code":"# install.packages(\"pak\") pak::pak(\"bastienird/CWP.dataset\")"},{"path":"https://bastienird.github.io/CWP.dataset/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Package to Analyse and Tidy Fisheries Dataset on CWP Standards","text":"Full documentation website : https://bastienird.github.io/CWP.dataset","code":""},{"path":"https://bastienird.github.io/CWP.dataset/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Package to Analyse and Tidy Fisheries Dataset on CWP Standards","text":"","code":"fusen::draw_package_structure() #> ‚îÄ‚îÄ Reading NAMESPACE file ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> ‚îÄ‚îÄ flat_additional.Rmd ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> ‚îÄ‚îÄ flat_first.Rmd ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #> ‚îÄ‚îÄ keep ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ #>  #> - flat_additional.Rmd #>   - flat_title #>       + flat_additional.Rmd empty #>   - path #>       + dev/flat_additional.Rmd #>   - state #>       + üçè active #>   - R #>     - R/my_fun.R #>       + üëÄ my_fun #>   - tests #>       + tests/testthat/test-my_fun.R #>   - vignettes #>       + vignettes/go-further.Rmd #> - flat_first.Rmd #>   - flat_title #>       + flat_first.Rmd for working package #>   - path #>       + dev/flat_first.Rmd #>   - state #>       + üçè active #>   - R #>     - R/qflextable2.R #>       + üôà  #>       + üëÄ qflextable2 #>     - R/bar_plot_default.R #>       + üëÄ bar_plot_default #>     - R/cat_title.R #>       + üëÄ cat_title #>     - R/compute_summary_of_differences.R #>       + üëÄ compute_summary_of_differences #>     - R/filtering_function.R #>       + üëÄ filtering_function #>       + üëÄ last_path_reduced #>     - R/fonction_empreinte_spatiale.R #>       + üëÄ fonction_empreinte_spatiale #>     - R/fonction_groupement.R #>       + üëÄ fonction_groupement #>     - R/function_multiple_comparison.R #>       + üëÄ function_multiple_comparison #>     - R/generate_plot.R #>       + üëÄ generate_plot #>     - R/is_ggplot.R #>       + üëÄ is_ggplot #>     - R/isnulllist.R #>       + üëÄ isNullList #>     - R/knitting_plots_subfigures.R #>       + üëÄ knitting_plots_subfigures #>     - R/pie_chart_2_default.R #>       + üëÄ pie_chart_2_default #>     - R/read_data.R #>       + üëÄ read_data #>     - R/render_subfigures.R #>       + üëÄ render_subfigures #>     - R/save_image.R #>       + üëÄ save_image #>     - R/separate_chunks_and_text.R #>       + üëÄ separate_chunks_and_text #>   - tests #>       + tests/testthat/test-read_data.R #>       + tests/testthat/test-isnulllist.R #>       + tests/testthat/test-filtering_function.R #>       + tests/testthat/test-knitting_plots_subfigures.R #>       + tests/testthat/test-render_subfigures.R #>       + tests/testthat/test-bar_plot_default.R #>       + tests/testthat/test-generate_plot.R #>       + tests/testthat/test-pie_chart_2_default.R #>       + tests/testthat/test-fonction_empreinte_spatiale.R #>       + tests/testthat/test-save_image.R #>       + tests/testthat/test-cat_title.R #>       + tests/testthat/test-is_ggplot.R #>       + tests/testthat/test-qflextable2.R #>       + tests/testthat/test-function_multiple_comparison.R #>       + tests/testthat/test-compute_summary_of_differences.R #>       + tests/testthat/test-fonction_groupement.R #>       + tests/testthat/test-separate_chunks_and_text.R #>   - vignettes #>       + vignettes/first.Rmd #> - keep #>   - path #>       + keep #>   - state #>       + üçè active #>   - R #>     - R/calculate_rf_to_reach_final.R #>       + üëÄ calculate_rf_to_reach_final #>     - R/combined_summary_histogram_function.R #>       + üëÄ combined_summary_histogram_function #>     - R/compare_dimension_differences.R #>       + üëÄ compare_dimension_differences #>     - R/compare_georef_nominal.R #>       + üëÄ compare_georef_nominal #>     - R/compare_nominal_georef_corrected.R #>       + üëÄ compare_nominal_georef_corrected #>     - R/compare_strata_differences.R #>       + üëÄ compare_strata_differences #>     - R/compare_temporal_differences.R #>       + üëÄ compare_temporal_differences #>     - R/compnumberstratas.R #>       + üôà compnumberstratas #>     - R/comprehensive_cwp_dataframe_analysis.R #>       + üëÄ comprehensive_cwp_dataframe_analysis #>     - R/copy_project_files.R #>       + üôà copy_project_files #>     - R/copyrmd.R #>       + üôà copyrmd #>     - R/create_dygraph_for_unit.R #>       + üôà create_dygraph_for_unit #>     - R/function_geographic_identifier_renaming_and_not_standards_unit.R #>       + üëÄ function_geographic_identifier_renaming_and_not_standards_unit #>     - R/function_recap_each_step.R #>       + üëÄ function_recap_each_step #>     - R/Functions_markdown.R #>       + üôà  #>     - R/generate_bookdown_yml.R #>       + üëÄ generate_bookdown_yml #>     - R/geographic_diff.R #>       + üëÄ geographic_diff #>     - R/groupping_differences.R #>       + üëÄ groupping_differences #>     - R/is_null_or_not_exist.R #>       + üëÄ is_null_or_not_exist #>     - R/last_path_reduced.R #>       + üëÄ last_path_reduced #>     - R/last_path.R #>       + üëÄ last_path #>     - R/map_species_to_aggregated.R #>       + üôà map_species_to_aggregated #>     - R/other_dimension_analysis_dygraphs.R #>       + üëÄ other_dimension_analysis_dygraphs #>     - R/other_dimension_analysis.R #>       + üëÄ other_dimension_analysis #>     - R/Parameters_settings.R #>       + üôà Parameters_settings #>     - R/pie_chart_2_default_plotrix.R #>       + üëÄ pie_chart_2_default_plotrix #>     - R/process_fisheries_data_by_species.R #>       + üôà process_fisheries_data_by_species #>     - R/process_fisheries_data.R #>       + üôà process_fisheries_data #>     - R/process_fisheries_effort_data.R #>       + üôà process_fisheries_effort_data #>     - R/recap_all_markdown.R #>       + üôà recap_all_markdown #>     - R/spatial_coverage_analysis.R #>       + üëÄ spatial_coverage_analysis #>     - R/species_and_gear_group.R #>       + üôà  #>     - R/strata_in_georef_but_not_in_nominal_report_launching.R #>       + üëÄ strata_in_georef_but_not_in_nominal_report_launching #>     - R/strata_with_catches_without_effort.R #>       + üôà strata_with_catches_without_effort #>     - R/Summarising_invalid_data.R #>       + üëÄ Summarising_invalid_data #>     - R/summarising_step.R #>       + üëÄ summarising_step #>     - R/tidying_data.R #>       + üëÄ tidying_data #>     - R/tidying_GTA_data_for_comparison.R #>       + üëÄ tidying_GTA_data_for_comparison #>     - R/time_coverage_analysis_dygraphs.R #>       + üëÄ time_coverage_analysis_dygraphs #>     - R/time_coverage_analysis.R #>       + üëÄ time_coverage_analysis #>     - R/timecoverage.R #>       + üëÄ timecoverage #>     - R/write_options_to_csv.R #>       + üôà write_options_to_csv #>   - tests #>       + tests/testthat/test-calculate_rf_to_reach_final.R #>       + tests/testthat/test-combined_summary_histogram_function.R #>       + tests/testthat/test-compare_dimension_differences.R #>       + tests/testthat/test-compare_georef_nominal.R #>       + tests/testthat/test-compare_nominal_georef_corrected.R #>       + tests/testthat/test-compare_strata_differences.R #>       + tests/testthat/test-compare_temporal_differences_dygraphs.R #>       + tests/testthat/test-compare_temporal_differences.R #>       + tests/testthat/test-comparison-between-multiple-cwp-datasets.R #>       + tests/testthat/test-compnumberstratas.R #>       + tests/testthat/test-comprehensive_cwp_dataframe_analysis.R #>       + tests/testthat/test-copy_project_files.R #>       + tests/testthat/test-copyrmd.R #>       + tests/testthat/test-create_dygraph_for_unit.R #>       + tests/testthat/test-function_geographic_identifier_renaming_and_not_standards_unit.R #>       + tests/testthat/test-function_recap_each_step.R #>       + tests/testthat/test-Functions_markdown.R #>       + tests/testthat/test-geographic_diff.R #>       + tests/testthat/test-groupping_differences.R #>       + tests/testthat/test-is_null_or_not_exist.R #>       + tests/testthat/test-last_path_reduced.R #>       + tests/testthat/test-last_path.R #>       + tests/testthat/test-other_dimension_analysis_dygraphs.R #>       + tests/testthat/test-other_dimension_analysis.R #>       + tests/testthat/test-Parameters_settings.R #>       + tests/testthat/test-pie_chart_2_default_plotrix.R #>       + tests/testthat/test-process_fisheries_data_by_species.R #>       + tests/testthat/test-process_fisheries_data.R #>       + tests/testthat/test-recap_all_markdown.R #>       + tests/testthat/test-spatial_coverage_analysis.R #>       + tests/testthat/test-species_and_gear_group.R #>       + tests/testthat/test-strata_in_georef_but_not_in_nominal_report_launching.R #>       + tests/testthat/test-strata_with_catches_without_effort.R #>       + tests/testthat/test-Summarising_step.R #>       + tests/testthat/test-tidying_data.R #>       + tests/testthat/test-tidying_GTA_data_for_comparison.R #>       + tests/testthat/test-time_coverage_analysis_dygraphs.R #>       + tests/testthat/test-time_coverage_analysis.R #>       + tests/testthat/test-timecoverage.R #>       + tests/testthat/test-write_options_to_csv.R #>   - vignettes"},{"path":"https://bastienird.github.io/CWP.dataset/reference/Summarising_invalid_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizes invalid data in the provided dataset ‚Äî Summarising_invalid_data","title":"Summarizes invalid data in the provided dataset ‚Äî Summarising_invalid_data","text":"function identifies, aggregates, processes invalid data within geoflow entity rawdata geoflow-tunaatlas workflow analyzing various entities respective tRFMOs. checks missing data, incorrect values, geographic inconsistencies. function can optionally upload results database Google Drive.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/Summarising_invalid_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizes invalid data in the provided dataset ‚Äî Summarising_invalid_data","text":"","code":"Summarising_invalid_data(   main_dir,   connectionDB,   upload_drive = FALSE,   upload_DB = TRUE )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/Summarising_invalid_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizes invalid data in the provided dataset ‚Äî Summarising_invalid_data","text":"main_dir main working directory containing dataset necessary files. connectionDB database connection object used querying relevant tables. upload_drive Logical, whether upload results Google Drive (default: FALSE). upload_DB Logical, whether upload processed data database (default: TRUE).","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/Summarising_invalid_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizes invalid data in the provided dataset ‚Äî Summarising_invalid_data","text":"Writes multiple summary CSV files optional database tables, returning explicit value.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/bar_plot_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Bar Plots from Measurement Data ‚Äî bar_plot_default","title":"Create Bar Plots from Measurement Data ‚Äî bar_plot_default","text":"function creates bar plots comparing measurement data one two datasets.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/bar_plot_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Bar Plots from Measurement Data ‚Äî bar_plot_default","text":"","code":"bar_plot_default(   first,   second = NULL,   dimension,   topn = 10,   titre_1 = \"first\",   titre_2 = \"second\",   fill_colors = NULL,   outline_colors = NULL )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/bar_plot_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Bar Plots from Measurement Data ‚Äî bar_plot_default","text":"first data frame representing first dataset. second optional second data frame. dimension character string indicating dimension grouping. topn integer number top categories display. titre_1 character string title first dataset. titre_2 character string title second dataset. fill_colors Optional vector fill colors bars. outline_colors Optional vector outline colors bars.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/bar_plot_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Bar Plots from Measurement Data ‚Äî bar_plot_default","text":"bar plot object.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/calculate_rf_to_reach_final.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Raising Factors for Conversion to Nominal Data ‚Äî calculate_rf_to_reach_final","title":"Calculate Raising Factors for Conversion to Nominal Data ‚Äî calculate_rf_to_reach_final","text":"function calculates average conversion factors needed match georeferenced data numbers nominal data tons. considers strata measurement units (numbers tons) available evaluates coherence conversion factors achieve 100% nominal data strata. conversion factors excessively high, results inconclusive, nominal data generally exceed georeferenced data; , conversion raising occur. However, conversion factors low, inconsistency datasets likely.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/calculate_rf_to_reach_final.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Raising Factors for Conversion to Nominal Data ‚Äî calculate_rf_to_reach_final","text":"","code":"calculate_rf_to_reach_final(df_to_reach, df_to_convert, strata_cols)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/calculate_rf_to_reach_final.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Raising Factors for Conversion to Nominal Data ‚Äî calculate_rf_to_reach_final","text":"df_to_reach dataframe containing nominal data columns measurement units measurement values. df_to_convert dataframe containing georeferenced data \"number\" \"tons\" units, conversion factors calculated. strata_cols character vector column names used stratifying data (e.g., species, gear_type, fishing_fleet, year).","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/calculate_rf_to_reach_final.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Raising Factors for Conversion to Nominal Data ‚Äî calculate_rf_to_reach_final","text":"dataframe calculated raising factors stratum conversion applicable. conversion factors high, marked inconclusive. low conversion factors, potential inconsistencies indicated.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/calculate_rf_to_reach_final.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Raising Factors for Conversion to Nominal Data ‚Äî calculate_rf_to_reach_final","text":"function groups aggregates data within specified stratum. calculates conversion factors stratum determining difference nominal data values converted georeferenced data values tons. Strata measurement units selected comparison.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/calculate_rf_to_reach_final.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Raising Factors for Conversion to Nominal Data ‚Äî calculate_rf_to_reach_final","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: nominal_data <- data.frame(time_start = as.Date(\"2020-01-01\"), measurement_value = 100, ...) georef_data <- data.frame(time_start = as.Date(\"2020-01-01\"), measurement_unit = \"no\", measurement_value = 200, ...) strata_cols <- c(\"species\", \"gear_type\", \"fishing_fleet\", \"year\", \"geographic_identifier_nom\") calculate_rf_to_reach_final.R(nominal_df = nominal_data, lvl0_conv_df = georef_data, strata_cols = strata_cols) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/cat_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Title with Optional Child Header ‚Äî cat_title","title":"Create a Title with Optional Child Header ‚Äî cat_title","text":"function formats title optional child headers output.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/cat_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Title with Optional Child Header ‚Äî cat_title","text":"","code":"cat_title(x, child_headerinside = \"\")"},{"path":"https://bastienird.github.io/CWP.dataset/reference/cat_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Title with Optional Child Header ‚Äî cat_title","text":"x character string representing title. child_headerinside optional character string child header.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/cat_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Title with Optional Child Header ‚Äî cat_title","text":"formatted character string.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/combined_summary_histogram_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Summary Histogram of Measurement Units by Dataset ‚Äî combined_summary_histogram_function","title":"Create a Summary Histogram of Measurement Units by Dataset ‚Äî combined_summary_histogram_function","text":"function generates histogram comparing distribution different measurement units across two datasets. histogram displays percentage measurement unit type relative total number different strata dataset.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/combined_summary_histogram_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Summary Histogram of Measurement Units by Dataset ‚Äî combined_summary_histogram_function","text":"","code":"combined_summary_histogram_function(   init,   parameter_titre_dataset_1 = \"Init\",   final,   parameter_titre_dataset_2 = \"Final\" )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/combined_summary_histogram_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Summary Histogram of Measurement Units by Dataset ‚Äî combined_summary_histogram_function","text":"init data.table containing initial dataset. parameter_titre_dataset_1 character string specifying title initial dataset. Default \"Init\". final data.table containing final dataset. parameter_titre_dataset_2 character string specifying title final dataset. Default \"Final\".","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/combined_summary_histogram_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Summary Histogram of Measurement Units by Dataset ‚Äî combined_summary_histogram_function","text":"ggplot2 histogram object displaying percentage distribution measurement units across two datasets.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/combined_summary_histogram_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Summary Histogram of Measurement Units by Dataset ‚Äî combined_summary_histogram_function","text":"Converts init final datasets data.table. Counts number unique strata measurement unit. Computes percentage measurement unit within dataset. Creates histogram stacked bars, displaying percentage measurement unit. Uses consistent color palette different measurement units.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_dimension_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and Visualize Differences for Each Dimension ‚Äî compare_dimension_differences","title":"Calculate and Visualize Differences for Each Dimension ‚Äî compare_dimension_differences","text":"function calculates differences various dimensions two datasets provides detailed summary differences.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_dimension_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and Visualize Differences for Each Dimension ‚Äî compare_dimension_differences","text":"","code":"compare_dimension_differences(   Groupped_all,   Other_dimensions,   parameter_diff_value_or_percent,   parameter_columns_to_keep = c(\"Precision\", \"measurement_unit\", \"Values dataset 1\",     \"Values dataset 2\", \"Loss / Gain\", \"Difference (in %)\", \"Dimension\",     \"Difference in value\"),   topn = 6,   outputonly = FALSE )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_dimension_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and Visualize Differences for Each Dimension ‚Äî compare_dimension_differences","text":"Groupped_all Data frame containing grouped strata data. Other_dimensions Vector dimensions analyzed. parameter_diff_value_or_percent Character string indicating parameter sort (\"Difference value\" \"Difference (%)\"). parameter_columns_to_keep Vector column names keep final output. topn Integer indicating number top differences display. outputonly Logical value indicating whether output image.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_dimension_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and Visualize Differences for Each Dimension ‚Äî compare_dimension_differences","text":"data frame containing summarized differences dimension.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_dimension_differences.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate and Visualize Differences for Each Dimension ‚Äî compare_dimension_differences","text":"Bastien Grasset, bastien.grasset@ird.fr","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_dimension_differences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and Visualize Differences for Each Dimension ‚Äî compare_dimension_differences","text":"","code":"if (FALSE) { # \\dontrun{ compare_dimension_differences(Groupped_all, c(\"Dimension1\", \"Dimension2\"), \"Difference in value\", c(\"Column1\", \"Column2\"), 6, FALSE) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_georef_nominal.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Georef and Nominal Data ‚Äî compare_georef_nominal","title":"Compare Georef and Nominal Data ‚Äî compare_georef_nominal","text":"function takes georef nominal data inputs, performs comparison, returns results.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_georef_nominal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Georef and Nominal Data ‚Äî compare_georef_nominal","text":"","code":"compare_georef_nominal(georef, nominal, connectionDB)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_georef_nominal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Georef and Nominal Data ‚Äî compare_georef_nominal","text":"georef Data frame containing georeferenced data. nominal Data frame containing nominal data. connectionDB Database connection object.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_georef_nominal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Georef and Nominal Data ‚Äî compare_georef_nominal","text":"list containing comparison results.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_nominal_georef_corrected.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Nominal and Georeferenced Data ‚Äî compare_nominal_georef_corrected","title":"Compare Nominal and Georeferenced Data ‚Äî compare_nominal_georef_corrected","text":"function compares nominal georeferenced datasets, aggregating values specified strata, identifying mismatches, analyzing differences measurement values.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_nominal_georef_corrected.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Nominal and Georeferenced Data ‚Äî compare_nominal_georef_corrected","text":"","code":"compare_nominal_georef_corrected(   nominal,   georef_mapped,   list_strata = list(c(\"species\", \"year\", \"source_authority\", \"gear_type\",     \"fishing_fleet\", \"geographic_identifier_nom\")) )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_nominal_georef_corrected.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Nominal and Georeferenced Data ‚Äî compare_nominal_georef_corrected","text":"nominal data.table containing nominal data measurement values. georef_mapped data.table containing georeferenced data measurement values. list_strata list character vectors specifying grouping strata comparison. Default: list(c(\"species\", \"year\", \"source_authority\", \"gear_type\", \"fishing_fleet\", \"geographic_identifier_nom\")).","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_nominal_georef_corrected.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Nominal and Georeferenced Data ‚Äî compare_nominal_georef_corrected","text":"list containing multiple comparison results, including: georef_no_nominal: Strata present georeferenced data absent nominal. georef_no_nominal_with_value: Strata missing nominal georeferenced measurement values. georef_tons_no_nominal: Strata tons missing nominal data. georef_sup_nominal: Strata georeferenced data exceeds nominal data. tons_nei_nominal: NEI strata nominal data explain differences. tons_nei_georef: NEI strata georeferenced data explain differences. sum_georef_no_nominal: Total measurement value georeferenced data missing nominal. suffisant: Boolean indicating whether georeferenced data sufficient match nominal data. tons_aggregated_georef: Measurement values aggregated georeferenced strata. sum_georef_sup_nom: Total excess georeferenced data nominal data.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_nominal_georef_corrected.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare Nominal and Georeferenced Data ‚Äî compare_nominal_georef_corrected","text":"Converts nominal georef_mapped data.table format. Extracts year time_start datasets. Filters georeferenced data retain measurements tons. Aggregates measurement values provided strata. Compares common distinct strata datasets. Evaluates impact NEI aggregated species (TUN, TUS, BIL) discrepancies.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_nominal_georef_corrected.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare Nominal and Georeferenced Data ‚Äî compare_nominal_georef_corrected","text":"","code":"if (FALSE) { # \\dontrun{  nominal <- data.table(   species = c(\"YFT\", \"BET\"),   year = c(\"2020\", \"2020\"),   source_authority = c(\"RFMO_A\", \"RFMO_B\"),   gear_type = c(\"03.1.0\", \"01.1.0\"),   fishing_fleet = c(\"Fleet_1\", \"Fleet_2\"),   geographic_identifier_nom = c(\"5100000\", \"5100001\"),   measurement_unit = c(\"t\", \"t\"),   measurement_value = c(100, 200) )  georef_mapped <- data.table(   species = c(\"YFT\", \"BET\"),   year = c(\"2020\", \"2020\"),   source_authority = c(\"RFMO_A\", \"RFMO_B\"),   gear_type = c(\"03.1.0\", \"01.1.0\"),   fishing_fleet = c(\"Fleet_1\", \"Fleet_2\"),   geographic_identifier_nom = c(\"5100000\", \"5100001\"),   measurement_unit = c(\"t\", \"t\"),   measurement_value = c(150, 180),   time_start = as.Date(c(\"2020-01-01\", \"2020-01-01\")) )  result <- compare_nominal_georef_corrected(nominal, georef_mapped) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_strata_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and Compare Strata Differences ‚Äî compare_strata_differences","title":"Calculate and Compare Strata Differences ‚Äî compare_strata_differences","text":"function calculates differences strata two datasets provides various summaries visualizations results.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_strata_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and Compare Strata Differences ‚Äî compare_strata_differences","text":"","code":"compare_strata_differences(   init,   final,   Groupped_all,   titre_1 = \"Dataset1\",   titre_2 = \"Dataset2\",   parameter_columns_to_keep,   unique_analyse = FALSE )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_strata_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and Compare Strata Differences ‚Äî compare_strata_differences","text":"init Data frame containing initial geographical data. final Data frame containing final geographical data. Groupped_all Data frame containing grouped strata data. titre_1 Title first dataset. titre_2 Title second dataset. parameter_columns_to_keep Vector column names keep final output. unique_analyse Logical value indicating whether analysis unique.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_strata_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and Compare Strata Differences ‚Äî compare_strata_differences","text":"list containing summaries visualizations strata differences.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_strata_differences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and Compare Strata Differences ‚Äî compare_strata_differences","text":"","code":"if (FALSE) { # \\dontrun{ compare_strata_differences(init, final, Groupped_all, \"Dataset1\", \"Dataset2\", c(\"Column1\", \"Column2\"), FALSE) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_temporal_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and Visualize Temporal Data Differences ‚Äî compare_temporal_differences","title":"Calculate and Visualize Temporal Data Differences ‚Äî compare_temporal_differences","text":"function calculates differences temporal data two datasets provides visualizations differences percent year.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_temporal_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and Visualize Temporal Data Differences ‚Äî compare_temporal_differences","text":"","code":"compare_temporal_differences(   parameter_time_dimension,   init,   final,   titre_1,   titre_2,   unique_analyse = FALSE )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_temporal_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and Visualize Temporal Data Differences ‚Äî compare_temporal_differences","text":"parameter_time_dimension list time dimensions analyzed. init Data frame containing initial data. final Data frame containing final data. titre_1 Title first dataset. titre_2 Title second dataset. unique_analyse Logical value indicating whether analysis unique.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_temporal_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and Visualize Temporal Data Differences ‚Äî compare_temporal_differences","text":"list containing ggplot objects visualizing temporal differences.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_temporal_differences.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate and Visualize Temporal Data Differences ‚Äî compare_temporal_differences","text":"Bastien Grasset, bastien.grasset@ird.fr","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compare_temporal_differences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and Visualize Temporal Data Differences ‚Äî compare_temporal_differences","text":"","code":"if (FALSE) { # \\dontrun{ compare_temporal_differences(c(\"Year\"), init, final, \"Dataset1\", \"Dataset2\", FALSE, \"path/to/save\") } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/compnumberstratas.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Strata Comparisons ‚Äî compnumberstratas","title":"Perform Strata Comparisons ‚Äî compnumberstratas","text":"function performs various comparisons initial final datasets identify lost gained strata.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compnumberstratas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Strata Comparisons ‚Äî compnumberstratas","text":"","code":"compnumberstratas(   init,   final,   Groupped_all,   titre_1,   titre_2,   parameter_columns_to_keep,   unique_analyse = FALSE )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/compnumberstratas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Strata Comparisons ‚Äî compnumberstratas","text":"init data frame representing initial dataset. final data frame representing final dataset. Groupped_all data frame containing grouped data. titre_1 string representing title initial dataset. titre_2 string representing title final dataset. parameter_columns_to_keep vector column names keep final comparison. unique_analyse boolean flag indicating whether perform unique analysis. Defaults FALSE.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compnumberstratas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Strata Comparisons ‚Äî compnumberstratas","text":"list containing following elements: strates_perdues_first_10 data frame first 10 lost strata. number_init_column_final_column data frame comparing number unique values columns initial final datasets. disapandap data frame showing differences strata.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compnumberstratas.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform Strata Comparisons ‚Äî compnumberstratas","text":"Bastien Grasset, bastien.grasset@ird.fr","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compnumberstratas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Strata Comparisons ‚Äî compnumberstratas","text":"","code":"if (FALSE) { # \\dontrun{ compnumberstratas(init, final, Groupped_all, titre_1, titre_2, parameter_columns_to_keep, unique_analyse = FALSE) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/comprehensive_cwp_dataframe_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Comprehensive Analysis of Initial and Final Datasets ‚Äî comprehensive_cwp_dataframe_analysis","title":"Comprehensive Analysis of Initial and Final Datasets ‚Äî comprehensive_cwp_dataframe_analysis","text":"function performs detailed comparative analysis initial final datasets. includes: summary differences Grouping differences Dimension comparisons (temporal, spatial, categorical) Visualization options","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/comprehensive_cwp_dataframe_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Comprehensive Analysis of Initial and Final Datasets ‚Äî comprehensive_cwp_dataframe_analysis","text":"","code":"comprehensive_cwp_dataframe_analysis(   parameter_init,   parameter_final,   fig.path = getwd(),   parameter_fact = \"catch\",   parameter_short = FALSE,   parameter_columns_to_keep = c(\"Precision\", \"measurement_unit\", \"Values dataset 1\",     \"Values dataset 2\", \"Loss / Gain\", \"Difference (in %)\", \"Dimension\",     \"Difference in value\"),   parameter_diff_value_or_percent = \"Difference (in %)\",   parameter_UNK_for_not_standards_unit = TRUE,   parameter_filtering = list(species = NULL, fishing_fleet = NULL),   parameter_time_dimension = c(\"time_start\"),   parameter_geographical_dimension = \"geographic_identifier\",   parameter_geographical_dimension_groupping = \"GRIDTYPE\",   parameter_colnames_to_keep = \"all\",   outputonly = FALSE,   plotting_type = \"view\",   print_map = TRUE,   shapefile_fix = NULL,   continent = NULL,   coverage = TRUE,   parameter_resolution_filter = NULL,   parameter_titre_dataset_1 = \"Dataset 1\",   parameter_titre_dataset_2 = \"Dataset 2\",   unique_analyse = FALSE,   removemap = FALSE,   topnumber = 6 )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/comprehensive_cwp_dataframe_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Comprehensive Analysis of Initial and Final Datasets ‚Äî comprehensive_cwp_dataframe_analysis","text":"parameter_init Data frame. initial dataset. parameter_final Data frame. final dataset. fig.path Character. Path save output figures. Default working directory. parameter_fact Character. Fact parameter, default \"catch\". parameter_short Logical. Whether use short parameter names. Default FALSE. parameter_columns_to_keep Character vector. Columns retain comparison. parameter_diff_value_or_percent Character. Difference calculation method: \"Difference (%)\" (default) \"Difference value\". parameter_UNK_for_not_standards_unit Logical. Whether use \"UNK\" non-standard measurement units. Default TRUE. parameter_filtering List. Filtering parameters species fishing fleet. Default list(species = NULL, fishing_fleet = NULL). parameter_time_dimension Character vector. Time-related columns include. Default c(\"time_start\"). parameter_geographical_dimension Character. Column name geographic identifiers. Default \"geographic_identifier\". parameter_geographical_dimension_groupping Character. Grouping column geographical dimensions. Default \"GRIDTYPE\". parameter_colnames_to_keep Character \"\". Column names retain. Default \"\". outputonly Logical. Whether return analysis output without visualization. Default FALSE. plotting_type Character. Type visualization (\"view\" default). print_map Logical. Whether print map visualization. Default TRUE. shapefile_fix Object. Optional shapefile spatial analysis. Default NULL. continent Character. Optional filter specific continent. Default NULL. coverage Logical. Whether analyze time, geographic, dimensions. FALSE, summary performed. Default TRUE. parameter_resolution_filter Object. Resolution filtering parameter. Default NULL. parameter_titre_dataset_1 Character. Title dataset 1 outputs. Default \"Dataset 1\". parameter_titre_dataset_2 Character. Title dataset 2 outputs. Default \"Dataset 2\". unique_analyse Logical. Whether analysis unique. Default FALSE. removemap Logical. Whether remove map outputs. Default FALSE. topnumber Integer. Number top characteristics display without grouping. Default 6.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/comprehensive_cwp_dataframe_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Comprehensive Analysis of Initial and Final Datasets ‚Äî comprehensive_cwp_dataframe_analysis","text":"list containing: Summary dataset differences Grouped differences Comparisons across time, space, dimensions Optional visualizations","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compute_summary_of_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Summary of Differences ‚Äî compute_summary_of_differences","title":"Compute Summary of Differences ‚Äî compute_summary_of_differences","text":"function computes summary differences measurement values two datasets grouping measurement unit calculating sum values. also computes percentage difference.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compute_summary_of_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Summary of Differences ‚Äî compute_summary_of_differences","text":"","code":"compute_summary_of_differences(   init,   final,   titre_1 = \"Dataset 1\",   titre_2 = \"Dataset 2\" )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/compute_summary_of_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Summary of Differences ‚Äî compute_summary_of_differences","text":"init data.table containing initial measurement data. final data.table containing final measurement data. titre_1 character string title first dataset (default: \"Dataset 1\"). titre_2 character string title second dataset (default: \"Dataset 2\").","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/compute_summary_of_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Summary of Differences ‚Äî compute_summary_of_differences","text":"data.table summarizing differences two datasets, including total measurements percentage differences.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/create_dygraph_for_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Interactive Dygraph for a Specific Unit and Measurement Type ‚Äî create_dygraph_for_unit","title":"Create Interactive Dygraph for a Specific Unit and Measurement Type ‚Äî create_dygraph_for_unit","text":"function filters dataset given dimension (unit) measurement unit, prepares time series , generates interactive dygraph showing temporal difference (percent).","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/create_dygraph_for_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Interactive Dygraph for a Specific Unit and Measurement Type ‚Äî create_dygraph_for_unit","text":"","code":"create_dygraph_for_unit(data, filtering_unit, measurement_unit)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/create_dygraph_for_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Interactive Dygraph for a Specific Unit and Measurement Type ‚Äî create_dygraph_for_unit","text":"data data frame containing least columns Dimension, measurement_unit, Precision, Difference (%). filtering_unit Character. unit dimension filter (e.g., \"species\", \"gear_type\", etc.). measurement_unit Character. measurement unit filter (e.g., \"t\", \"\").","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/create_dygraph_for_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Interactive Dygraph for a Specific Unit and Measurement Type ‚Äî create_dygraph_for_unit","text":"dygraph htmlwidget displaying temporal difference (%) selected unit measurement.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/create_dygraph_for_unit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Interactive Dygraph for a Specific Unit and Measurement Type ‚Äî create_dygraph_for_unit","text":"","code":"if (FALSE) { # \\dontrun{ create_dygraph_for_unit(my_data, \"species\", \"t\") } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/filtering_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Dataframe based on provided Parameters /Dimensions ‚Äî filtering_function","title":"Filter Dataframe based on provided Parameters /Dimensions ‚Äî filtering_function","text":"function filters data frame based specified filtering parameters.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/filtering_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Dataframe based on provided Parameters /Dimensions ‚Äî filtering_function","text":"","code":"filtering_function(dataframe_to_filter, parameter_filtering)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/filtering_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Dataframe based on provided Parameters /Dimensions ‚Äî filtering_function","text":"dataframe_to_filter data frame filtered. parameter_filtering list parameters use filtering.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/filtering_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Dataframe based on provided Parameters /Dimensions ‚Äî filtering_function","text":"filtered data frame.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/fonction_empreinte_spatiale.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial Footprint Function ‚Äî fonction_empreinte_spatiale","title":"Spatial Footprint Function ‚Äî fonction_empreinte_spatiale","text":"function generates spatial representation measurement values two datasets, allowing comparison initial final datasets using provided shapefile.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/fonction_empreinte_spatiale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial Footprint Function ‚Äî fonction_empreinte_spatiale","text":"","code":"fonction_empreinte_spatiale(   variable_affichee,   initial_dataset = init,   final_dataset = final,   titre_1 = \"Dataset 1\",   titre_2 = \"Dataset 2\",   shapefile.fix = NULL,   plotting_type = \"plot\",   continent = NULL )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/fonction_empreinte_spatiale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial Footprint Function ‚Äî fonction_empreinte_spatiale","text":"variable_affichee character string indicating measurement unit displayed. initial_dataset data.table containing initial measurement data (default: init). final_dataset data.table containing final measurement data (default: final). titre_1 character string title first dataset (default: \"Dataset 1\"). titre_2 character string title second dataset (default: \"Dataset 2\"). shapefile.fix spatial object (sf) polygons defines geographical areas. plotting_type character string indicating type plot (\"plot\" \"view\"). continent optional spatial object adding continent borders plot.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/fonction_empreinte_spatiale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial Footprint Function ‚Äî fonction_empreinte_spatiale","text":"plot object representing spatial footprint measurement values.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/fonction_groupement.html","id":null,"dir":"Reference","previous_headings":"","what":"Group and Summarize Data ‚Äî fonction_groupement","title":"Group and Summarize Data ‚Äî fonction_groupement","text":"function takes two data.tables groups specified columns, summing measurement values group, compares results data.tables. computes loss gain measurement values provides additional metrics related comparison.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/fonction_groupement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group and Summarize Data ‚Äî fonction_groupement","text":"","code":"fonction_groupement(these_col, init, final)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/fonction_groupement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group and Summarize Data ‚Äî fonction_groupement","text":"these_col character vector column names group . init data.table containing initial measurement data. final data.table containing final measurement data.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/fonction_groupement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group and Summarize Data ‚Äî fonction_groupement","text":"data.table containing results comparison two input data.tables, including summed values, losses gains, percentage differences.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_geographic_identifier_renaming_and_not_standards_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Geographic Identifiers and Handle Standard Units ‚Äî function_geographic_identifier_renaming_and_not_standards_unit","title":"Rename Geographic Identifiers and Handle Standard Units ‚Äî function_geographic_identifier_renaming_and_not_standards_unit","text":"function renames geographic identifiers data frame manages non-standard units.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_geographic_identifier_renaming_and_not_standards_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Geographic Identifiers and Handle Standard Units ‚Äî function_geographic_identifier_renaming_and_not_standards_unit","text":"","code":"function_geographic_identifier_renaming_and_not_standards_unit(   dataframe_to_filter,   geo_dim,   parameter_fact,   parameter_UNK_for_not_standards_unit = TRUE,   geo_dim_group )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_geographic_identifier_renaming_and_not_standards_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Geographic Identifiers and Handle Standard Units ‚Äî function_geographic_identifier_renaming_and_not_standards_unit","text":"dataframe_to_filter data frame filter rename columns. geo_dim geographic dimension rename. parameter_fact parameter indicating measurement context. parameter_UNK_for_not_standards_unit Logical indicating non-standard units labeled 'UNK'. geo_dim_group grouping geographic dimension rename.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_geographic_identifier_renaming_and_not_standards_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Geographic Identifiers and Handle Standard Units ‚Äî function_geographic_identifier_renaming_and_not_standards_unit","text":"modified data frame renamed columns.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_multiple_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Multiple Comparisons Between Datasets ‚Äî function_multiple_comparison","title":"Perform Multiple Comparisons Between Datasets ‚Äî function_multiple_comparison","text":"function performs various summarizing steps datasets related species gear types. retrieves data database, processes , generates comparison reports.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_multiple_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Multiple Comparisons Between Datasets ‚Äî function_multiple_comparison","text":"","code":"function_multiple_comparison(   counting,   parameter_short,   sub_list_dir,   parameters_child_global,   fig.path,   coverage = FALSE,   shapefile.fix,   continent )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_multiple_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Multiple Comparisons Between Datasets ‚Äî function_multiple_comparison","text":"counting Integer. step number comparison process. parameter_short Character. short version parameter name. sub_list_dir Character vector. list directories containing data compared. parameters_child_global List. list global child parameters filtering resolution settings. fig.path Character. Path save comparison figures. coverage Logical. Whether include coverage analysis comparison (default: FALSE). shapefile.fix Object. fixed shapefile spatial adjustments. continent Object. continent shape plotting worldmaps.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_multiple_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Multiple Comparisons Between Datasets ‚Äî function_multiple_comparison","text":"list containing comparison results, metadata, visualization elements. datasets identical, returns NA.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_multiple_comparison.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Multiple Comparisons Between Datasets ‚Äî function_multiple_comparison","text":"function compares datasets two consecutive steps, applying data filtering analysis. generates structured output reports stored fig.path.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_multiple_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Multiple Comparisons Between Datasets ‚Äî function_multiple_comparison","text":"","code":"if (FALSE) { # \\dontrun{ result <- function_multiple_comparison(   counting = 1,   parameter_short = \"gear_analysis\",   sub_list_dir = c(\"step1\", \"step2\"),   parameters_child_global = list(parameter_resolution_filter = 1, parameter_filtering = \"strict\"),   fig.path = \"output/\",   coverage = FALSE,   shapefile.fix = NULL,   continent = \"Europe\" ) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_recap_each_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to Record Step Details and Save Results ‚Äî function_recap_each_step","title":"Function to Record Step Details and Save Results ‚Äî function_recap_each_step","text":"function records details processing step, including explanations, function names, options. saves results RDS files text files specified directory.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_recap_each_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to Record Step Details and Save Results ‚Äî function_recap_each_step","text":"","code":"function_recap_each_step(   step_name,   rds_data,   explanation = \"No explanation provided to this step\",   functions = \"No function used in this step\",   option_list = NULL,   entity = NULL )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_recap_each_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to Record Step Details and Save Results ‚Äî function_recap_each_step","text":"step_name character string specifying name step. rds_data data frame containing data saved RDS file. explanation character string providing explanation step. functions character string listing functions used step. option_list list options used step. entity geoflow entity","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_recap_each_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to Record Step Details and Save Results ‚Äî function_recap_each_step","text":"None","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_recap_each_step.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to Record Step Details and Save Results ‚Äî function_recap_each_step","text":"Bastien Grasset","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/function_recap_each_step.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to Record Step Details and Save Results ‚Äî function_recap_each_step","text":"","code":"if (FALSE) { # \\dontrun{ function_recap_each_step(\"step1\", data, \"This step does X\", \"function1, function2\", list(option1 = \"value1\")) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/generate_bookdown_yml.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a _bookdown.yml file dynamically ‚Äî generate_bookdown_yml","title":"Generate a _bookdown.yml file dynamically ‚Äî generate_bookdown_yml","text":"function creates _bookdown.yml file specified directory define structure configuration Bookdown project. allows specifying output directory, merging behavior, list .Rmd files required Bookdown compilation.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/generate_bookdown_yml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a _bookdown.yml file dynamically ‚Äî generate_bookdown_yml","text":"","code":"generate_bookdown_yml(   destination = system.file(\"rmd\", package = \"CWP.dataset\") )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/generate_bookdown_yml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a _bookdown.yml file dynamically ‚Äî generate_bookdown_yml","text":"destination Character. directory _bookdown.yml file created. Default \"bookdown_run\".","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/generate_bookdown_yml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a _bookdown.yml file dynamically ‚Äî generate_bookdown_yml","text":"return value. function writes _bookdown.yml specified destination directory.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/generate_bookdown_yml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a _bookdown.yml file dynamically ‚Äî generate_bookdown_yml","text":"","code":"# Generate a `_bookdown.yml` in the default directory generate_bookdown_yml()  # Generate a `_bookdown.yml` in a custom directory generate_bookdown_yml(\"custom_bookdown_dir\")"},{"path":"https://bastienird.github.io/CWP.dataset/reference/generate_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Documentation to do ‚Äî generate_plot","title":"Documentation to do ‚Äî generate_plot","text":"Documentation ","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/generate_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Documentation to do ‚Äî generate_plot","text":"","code":"generate_plot(data, title, dimensioninside, topninside)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/generate_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Documentation to do ‚Äî generate_plot","text":"data data frame representing first dataset cleaned title Title plot dimensioninside dimension plot topninside integer number top categories display.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/geographic_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographic Differences ‚Äî geographic_diff","title":"Geographic Differences ‚Äî geographic_diff","text":"function analyzes geographic data differences two datasets.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/geographic_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographic Differences ‚Äî geographic_diff","text":"","code":"geographic_diff(   init,   final,   shapefile_fix,   parameter_geographical_dimension,   parameter_geographical_dimension_groupping,   continent,   plotting_type,   titre_1,   titre_2,   outputonly )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/geographic_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Geographic Differences ‚Äî geographic_diff","text":"init Initial dataset final Final dataset shapefile_fix Shapefile used parameter_geographical_dimension Parameter geographical dimension parameter_geographical_dimension_groupping Parameter geographical dimension grouping continent Shapefile continent plotting_type Type plotting (\"plot\" ) titre_1 Title first dataset titre_2 Title second dataset outputonly Boolean specify output saved ","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/geographic_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Geographic Differences ‚Äî geographic_diff","text":"list containing geographic differences saved image","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/grapes-notin-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Negate %in% Operator ‚Äî %notin%","title":"Negate %in% Operator ‚Äî %notin%","text":"operator checks elements present given vector.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/grapes-notin-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negate %in% Operator ‚Äî %notin%","text":"","code":"x %notin% table"},{"path":"https://bastienird.github.io/CWP.dataset/reference/grapes-notin-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negate %in% Operator ‚Äî %notin%","text":"x vector elements check. table vector check .","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/grapes-notin-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negate %in% Operator ‚Äî %notin%","text":"Logical vector indicating element x table.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/grapes-notin-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negate %in% Operator ‚Äî %notin%","text":"","code":"5 %notin% c(1, 2, 3) # TRUE #> [1] TRUE \"a\" %notin% c(\"b\", \"c\") # TRUE #> [1] TRUE 2 %notin% c(1, 2, 3) # FALSE #> [1] FALSE"},{"path":"https://bastienird.github.io/CWP.dataset/reference/groupping_differences.html","id":null,"dir":"Reference","previous_headings":"","what":"Groupping Differences ‚Äî groupping_differences","title":"Groupping Differences ‚Äî groupping_differences","text":"function groups differences initial final datasets based various dimensions.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/groupping_differences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Groupping Differences ‚Äî groupping_differences","text":"","code":"groupping_differences(   init,   final,   parameter_time_dimension,   parameter_geographical_dimension,   parameter_geographical_dimension_groupping )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/groupping_differences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Groupping Differences ‚Äî groupping_differences","text":"init Initial dataset. final Final dataset. parameter_time_dimension Vector time dimensions. parameter_geographical_dimension Vector geographical dimensions. parameter_geographical_dimension_groupping Vector geographical dimension groupings.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/groupping_differences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Groupping Differences ‚Äî groupping_differences","text":"list containing grouped differences dimensions, geographical dimension groupings, time dimensions.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/groupping_differences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Groupping Differences ‚Äî groupping_differences","text":"","code":"if (FALSE) { # \\dontrun{ results <- groupping_differences(init, final, parameter_time_dimension, parameter_geographical_dimension, parameter_geographical_dimension_groupping) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/isNullList.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if All Elements in a List are NULL or Empty ‚Äî isNullList","title":"Check if All Elements in a List are NULL or Empty ‚Äî isNullList","text":"function checks elements list zero length.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/isNullList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if All Elements in a List are NULL or Empty ‚Äî isNullList","text":"","code":"isNullList(x)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/isNullList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if All Elements in a List are NULL or Empty ‚Äî isNullList","text":"x list check.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/isNullList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if All Elements in a List are NULL or Empty ‚Äî isNullList","text":"Logical value indicating whether elements NULL empty.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/is_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an Object is a ggplot ‚Äî is_ggplot","title":"Check if an Object is a ggplot ‚Äî is_ggplot","text":"function checks object ggplot object.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/is_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an Object is a ggplot ‚Äî is_ggplot","text":"","code":"is_ggplot(obj)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/is_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an Object is a ggplot ‚Äî is_ggplot","text":"obj object check.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/is_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an Object is a ggplot ‚Äî is_ggplot","text":"Logical value indicating whether object ggplot.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/is_null_or_not_exist.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Variable is NULL or Does Not Exist ‚Äî is_null_or_not_exist","title":"Check if Variable is NULL or Does Not Exist ‚Äî is_null_or_not_exist","text":"function checks variable either NULL exist environment.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/is_null_or_not_exist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Variable is NULL or Does Not Exist ‚Äî is_null_or_not_exist","text":"","code":"is_null_or_not_exist(x)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/is_null_or_not_exist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Variable is NULL or Does Not Exist ‚Äî is_null_or_not_exist","text":"x variable check.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/is_null_or_not_exist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Variable is NULL or Does Not Exist ‚Äî is_null_or_not_exist","text":"Logical value indicating whether variable NULL exist.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/knitting_plots_subfigures.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Plots with Subfigures in a Knitr Environment ‚Äî knitting_plots_subfigures","title":"Save Plots with Subfigures in a Knitr Environment ‚Äî knitting_plots_subfigures","text":"function saves plots creates subfigures rendering RMarkdown.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/knitting_plots_subfigures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Plots with Subfigures in a Knitr Environment ‚Äî knitting_plots_subfigures","text":"","code":"knitting_plots_subfigures(   plot,   title,   folder = \"Unknown_folder\",   fig.pathinside = fig.path )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/knitting_plots_subfigures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Plots with Subfigures in a Knitr Environment ‚Äî knitting_plots_subfigures","text":"plot plot object save. title character string plot title. folder folder plot saved. fig.pathinside path saving figure.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/knitting_plots_subfigures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Plots with Subfigures in a Knitr Environment ‚Äî knitting_plots_subfigures","text":"None","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/last_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Last Part of a File Path ‚Äî last_path","title":"Extract Last Part of a File Path ‚Äî last_path","text":"function returns last part file path removing specific suffix.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/last_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Last Part of a File Path ‚Äî last_path","text":"","code":"last_path(x)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/last_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Last Part of a File Path ‚Äî last_path","text":"x character string representing file path.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/last_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Last Part of a File Path ‚Äî last_path","text":"character string representing last part file path.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/last_path_reduced.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce Last Path for Georeferenced Datasets ‚Äî last_path_reduced","title":"Reduce Last Path for Georeferenced Datasets ‚Äî last_path_reduced","text":"function modifies last path removing specific substrings clarity. function modifies last path removing specific substrings clarity.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/last_path_reduced.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce Last Path for Georeferenced Datasets ‚Äî last_path_reduced","text":"","code":"last_path_reduced(x)  last_path_reduced(x)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/last_path_reduced.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce Last Path for Georeferenced Datasets ‚Äî last_path_reduced","text":"x character string representing file path.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/last_path_reduced.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce Last Path for Georeferenced Datasets ‚Äî last_path_reduced","text":"character string representing modified last path. character string representing modified last path.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/my_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"my_fun Title ‚Äî my_fun","title":"my_fun Title ‚Äî my_fun","text":"my_fun Title","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/my_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"my_fun Title ‚Äî my_fun","text":"","code":"my_fun()"},{"path":"https://bastienird.github.io/CWP.dataset/reference/my_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"my_fun Title ‚Äî my_fun","text":"1","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/my_fun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"my_fun Title ‚Äî my_fun","text":"","code":"my_fun() #> [1] 1"},{"path":"https://bastienird.github.io/CWP.dataset/reference/other_dimension_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and Visualize Data Distribution for Other Dimensions ‚Äî other_dimension_analysis","title":"Calculate and Visualize Data Distribution for Other Dimensions ‚Äî other_dimension_analysis","text":"function calculates visualizes data distribution various dimensions using pie charts bar charts.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/other_dimension_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and Visualize Data Distribution for Other Dimensions ‚Äî other_dimension_analysis","text":"","code":"other_dimension_analysis(   Other_dimensions,   init,   final,   titre_1,   titre_2,   unique_analyse = FALSE,   fig.path,   topn = 7 )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/other_dimension_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and Visualize Data Distribution for Other Dimensions ‚Äî other_dimension_analysis","text":"Other_dimensions vector dimensions analyze. init Initial dataset. final Final dataset. titre_1 Title first dataset. titre_2 Title second dataset. unique_analyse Logical indicating whether analysis unique. fig.path Path save figures. topn integer number top categories display.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/other_dimension_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and Visualize Data Distribution for Other Dimensions ‚Äî other_dimension_analysis","text":"list containing pie charts bar charts dimension.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/other_dimension_analysis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate and Visualize Data Distribution for Other Dimensions ‚Äî other_dimension_analysis","text":"Bastien Grasset, bastien.grasset@ird.fr","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/other_dimension_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and Visualize Data Distribution for Other Dimensions ‚Äî other_dimension_analysis","text":"","code":"if (FALSE) { # \\dontrun{ other_dimension_analysis(c(\"Dimension1\", \"Dimension2\"), init, final, \"Dataset1\", \"Dataset2\", FALSE, \"path/to/save\") } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/other_dimension_analysis_dygraphs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and Visualize Data Distribution for Various Dimensions Using dygraphs ‚Äî other_dimension_analysis_dygraphs","title":"Calculate and Visualize Data Distribution for Various Dimensions Using dygraphs ‚Äî other_dimension_analysis_dygraphs","text":"function calculates visualizes data distribution various dimensions using interactive time-series plots dygraphs two datasets single dataset.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/other_dimension_analysis_dygraphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and Visualize Data Distribution for Various Dimensions Using dygraphs ‚Äî other_dimension_analysis_dygraphs","text":"","code":"other_dimension_analysis_dygraphs(   Other_dimensions,   init,   final = NULL,   titre_1 = \"Dataset1\",   titre_2 = \"Dataset2\",   unique_analyse = FALSE,   fig.path = NULL,   topn = 7 )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/other_dimension_analysis_dygraphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and Visualize Data Distribution for Various Dimensions Using dygraphs ‚Äî other_dimension_analysis_dygraphs","text":"Other_dimensions vector dimensions analyze. init Initial dataset. final Final dataset (optional). titre_1 Title first dataset. titre_2 Title second dataset (optional). unique_analyse Logical indicating whether analysis unique. fig.path Path save figures (optional). topn number top categories include chart.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/other_dimension_analysis_dygraphs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and Visualize Data Distribution for Various Dimensions Using dygraphs ‚Äî other_dimension_analysis_dygraphs","text":"list containing dygraphs dimension.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/other_dimension_analysis_dygraphs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and Visualize Data Distribution for Various Dimensions Using dygraphs ‚Äî other_dimension_analysis_dygraphs","text":"","code":"if (FALSE) { # \\dontrun{ data_dimension_analysis_dygraphs(c(\"Dimension1\", \"Dimension2\"), init, final, \"Dataset1\", \"Dataset2\", FALSE) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/pie_chart_2_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Pie Charts from Data ‚Äî pie_chart_2_default","title":"Create Pie Charts from Data ‚Äî pie_chart_2_default","text":"function creates pie charts measurement data one two datasets.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/pie_chart_2_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Pie Charts from Data ‚Äî pie_chart_2_default","text":"","code":"pie_chart_2_default(   dimension,   first,   second = NULL,   topn = 5,   titre_1 = \"first\",   titre_2 = \"second\",   title_yes_no = TRUE,   dataframe = FALSE )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/pie_chart_2_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Pie Charts from Data ‚Äî pie_chart_2_default","text":"dimension character string indicating dimension grouping. first data frame representing first dataset. second optional second data frame. topn integer number top categories display. titre_1 character string title first dataset. titre_2 character string title second dataset. title_yes_no Logical indicating title displayed. dataframe Logical indicating data frame returned.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/pie_chart_2_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Pie Charts from Data ‚Äî pie_chart_2_default","text":"pie chart list containing pie chart data frame, specified.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/pie_chart_2_default_plotrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create 3D Pie Charts from Data Using plotrix ‚Äî pie_chart_2_default_plotrix","title":"Create 3D Pie Charts from Data Using plotrix ‚Äî pie_chart_2_default_plotrix","text":"function creates 3D pie charts measurement data one two datasets using plotrix.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/pie_chart_2_default_plotrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create 3D Pie Charts from Data Using plotrix ‚Äî pie_chart_2_default_plotrix","text":"","code":"pie_chart_2_default_plotrix(   dimension,   first,   second = NULL,   topn = 5,   titre_1 = \"first\",   titre_2 = \"second\",   title_yes_no = TRUE,   dataframe = FALSE )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/pie_chart_2_default_plotrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create 3D Pie Charts from Data Using plotrix ‚Äî pie_chart_2_default_plotrix","text":"dimension character string indicating dimension grouping. first data frame representing first dataset. second optional second data frame. topn integer number top categories display. titre_1 character string title first dataset. titre_2 character string title second dataset. title_yes_no Logical indicating title displayed. dataframe Logical indicating data frame returned.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/pie_chart_2_default_plotrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create 3D Pie Charts from Data Using plotrix ‚Äî pie_chart_2_default_plotrix","text":"None","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/process_fisheries_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process and Plot Fisheries Data ‚Äî process_fisheries_data","title":"Process and Plot Fisheries Data ‚Äî process_fisheries_data","text":"function processes fisheries data, applies filtering, calculates statistics, generates plots results.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/process_fisheries_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process and Plot Fisheries Data ‚Äî process_fisheries_data","text":"","code":"process_fisheries_data(sub_list_dir_2, parameter_fact, parameter_filtering)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/process_fisheries_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process and Plot Fisheries Data ‚Äî process_fisheries_data","text":"sub_list_dir_2 List directories containing data files. parameter_fact Character string specifying type data (\"catch\" \"effort\"). parameter_filtering List filtering parameters passed filtering function.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/process_fisheries_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process and Plot Fisheries Data ‚Äî process_fisheries_data","text":"list containing processed data frame generated plots.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/process_fisheries_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process and Plot Fisheries Data ‚Äî process_fisheries_data","text":"","code":"if (FALSE) { # \\dontrun{ result <- process_fisheries_data(sub_list_dir_2, \"catch\", parameter_filtering) print(result$processed_data) print(result$second_graf) print(result$no_fish_plot) print(result$tons_plot) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/process_fisheries_effort_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process and Plot Fisheries Data ‚Äî process_fisheries_effort_data","title":"Process and Plot Fisheries Data ‚Äî process_fisheries_effort_data","text":"function processes fisheries data (catch effort), applies filtering, calculates statistics, generates plots results.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/process_fisheries_effort_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process and Plot Fisheries Data ‚Äî process_fisheries_effort_data","text":"","code":"process_fisheries_effort_data(sub_list_dir_2, parameter_filtering)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/process_fisheries_effort_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process and Plot Fisheries Data ‚Äî process_fisheries_effort_data","text":"sub_list_dir_2 List directories containing data files. parameter_filtering List filtering parameters passed filtering function.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/process_fisheries_effort_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process and Plot Fisheries Data ‚Äî process_fisheries_effort_data","text":"list containing processed data frame generated plots.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/process_fisheries_effort_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process and Plot Fisheries Data ‚Äî process_fisheries_effort_data","text":"","code":"if (FALSE) { # \\dontrun{ result <- process_fisheries_data(sub_list_dir_2, \"catch\", parameter_filtering) print(result$processed_data) print(result$second_graf) print(result$no_fish_plot) print(result$tons_plot) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/qflextable2.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and Save a Flextable ‚Äî qflextable2","title":"Create and Save a Flextable ‚Äî qflextable2","text":"function creates flextable data frame, optionally saving image.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/qflextable2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and Save a Flextable ‚Äî qflextable2","text":"","code":"qflextable2(   x,   captionn = NULL,   autonumm = autonum,   pgwidth = 6,   columns_to_color = NULL,   save_folder = NULL,   fig.pathinside = \"Figures\",   grouped_data = NULL,   interactive_plot = FALSE )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/qflextable2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and Save a Flextable ‚Äî qflextable2","text":"x data frame flextable create table . captionn optional character string table caption. autonumm optional automatic numbering parameter. pgwidth numeric value width table. columns_to_color Optional columns apply color coding. save_folder Optional folder save flextable. fig.pathinside character string path save figures. grouped_data Optional grouped data formatting. interactive_plot Logical indicating output interactive.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/qflextable2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and Save a Flextable ‚Äî qflextable2","text":"flextable object DT datatable interactive_plot TRUE.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Data from Various File Types ‚Äî read_data","title":"Read Data from Various File Types ‚Äî read_data","text":"function reads data based provided file path file type.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Data from Various File Types ‚Äî read_data","text":"","code":"read_data(file_path)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Data from Various File Types ‚Äî read_data","text":"file_path character string indicating path file read.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Data from Various File Types ‚Äî read_data","text":"Data read specified file, either data frame data table.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Data from Various File Types ‚Äî read_data","text":"","code":"# Example: Reading a CSV file # csv_data <- read_data(here::here(\"inst/CWP_dataset.csv\")) # head(csv_data)  # Display the first few rows"},{"path":"https://bastienird.github.io/CWP.dataset/reference/render_subfigures.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Subfigures from a List of Plots ‚Äî render_subfigures","title":"Render Subfigures from a List of Plots ‚Äî render_subfigures","text":"function creates grid subfigures list plots titles.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/render_subfigures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Subfigures from a List of Plots ‚Äî render_subfigures","text":"","code":"render_subfigures(plots_list, titles_list, general_title)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/render_subfigures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Subfigures from a List of Plots ‚Äî render_subfigures","text":"plots_list list plot objects. titles_list list character strings plot titles. general_title character string general title plots.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/render_subfigures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render Subfigures from a List of Plots ‚Äî render_subfigures","text":"None","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/save_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Plot as Image ‚Äî save_image","title":"Save Plot as Image ‚Äî save_image","text":"function saves current plot image specified folder.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/save_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Plot as Image ‚Äî save_image","text":"","code":"save_image(   title,   plott = last_plot(),   folder = NULL,   fig.pathinside = fig.path )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/save_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Plot as Image ‚Äî save_image","text":"title character string representing title plot. plott plot object save. folder folder image saved. fig.pathinside path saving figure.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/save_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Plot as Image ‚Äî save_image","text":"None","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/separate_chunks_and_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Separate R Code Chunks and Text from an RMarkdown (.Rmd) File and Optionally Save Them ‚Äî separate_chunks_and_text","title":"Separate R Code Chunks and Text from an RMarkdown (.Rmd) File and Optionally Save Them ‚Äî separate_chunks_and_text","text":"function reads RMarkdown file separates code chunks text. returns list two elements: chunks (R code chunks) text (non-code content). Optionally, saves chunks .R file text .txt file.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/separate_chunks_and_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Separate R Code Chunks and Text from an RMarkdown (.Rmd) File and Optionally Save Them ‚Äî separate_chunks_and_text","text":"","code":"separate_chunks_and_text(rmd_file, save_files = FALSE)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/separate_chunks_and_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Separate R Code Chunks and Text from an RMarkdown (.Rmd) File and Optionally Save Them ‚Äî separate_chunks_and_text","text":"rmd_file character string specifying path .Rmd file. save_files Logical. TRUE, saves chunks .R file text .txt file. Default FALSE.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/separate_chunks_and_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Separate R Code Chunks and Text from an RMarkdown (.Rmd) File and Optionally Save Them ‚Äî separate_chunks_and_text","text":"list containing two elements: chunks character vector content R code chunks. text character vector content outside R code chunks.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/spatial_coverage_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and Visualize Spatial Coverage ‚Äî spatial_coverage_analysis","title":"Calculate and Visualize Spatial Coverage ‚Äî spatial_coverage_analysis","text":"function calculates spatial coverage different units provides visualizations values spatial regions dataset.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/spatial_coverage_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and Visualize Spatial Coverage ‚Äî spatial_coverage_analysis","text":"","code":"spatial_coverage_analysis(   init,   final,   titre_1 = \"Dataset 1\",   titre_2 = \"Dataset 2\",   shapefile.fix,   plotting_type,   continent,   print_map = TRUE,   GrouppedGRIDTYPE )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/spatial_coverage_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and Visualize Spatial Coverage ‚Äî spatial_coverage_analysis","text":"init Initial dataset. final Final dataset. titre_1 Title first dataset. titre_2 Title second dataset. shapefile.fix Shapefile fixing spatial data. plotting_type Type plotting used. continent Data frame continent shapes reference. print_map Logical indicating whether print map. GrouppedGRIDTYPE Data frame containing grouped GRIDTYPE data.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/spatial_coverage_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and Visualize Spatial Coverage ‚Äî spatial_coverage_analysis","text":"list containing spatial coverage maps related information.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/spatial_coverage_analysis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate and Visualize Spatial Coverage ‚Äî spatial_coverage_analysis","text":"Bastien Grasset, bastien.grasset@ird.fr","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/spatial_coverage_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and Visualize Spatial Coverage ‚Äî spatial_coverage_analysis","text":"","code":"if (FALSE) { # \\dontrun{ spatial_coverage_analysis(units, init, final, \"Dataset1\", \"Dataset2\", shapefile.fix, \"plot\", continent, TRUE, GrouppedGRIDTYPE, \"path/to/save\") } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/strata_in_georef_but_not_in_nominal_report_launching.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch Strata in Georef but not in Nominal Report ‚Äî strata_in_georef_but_not_in_nominal_report_launching","title":"Launch Strata in Georef but not in Nominal Report ‚Äî strata_in_georef_but_not_in_nominal_report_launching","text":"function launches report comparing strata georef data nominal data.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/strata_in_georef_but_not_in_nominal_report_launching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch Strata in Georef but not in Nominal Report ‚Äî strata_in_georef_but_not_in_nominal_report_launching","text":"","code":"strata_in_georef_but_not_in_nominal_report_launching(   main.dir,   connectionDB,   uploadgoogledrive = TRUE )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/strata_in_georef_but_not_in_nominal_report_launching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch Strata in Georef but not in Nominal Report ‚Äî strata_in_georef_but_not_in_nominal_report_launching","text":"main.dir Directory containing main data files. connectionDB Database connection object. uploadgoogledrive Logical indicating whether upload report Google Drive.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/strata_in_georef_but_not_in_nominal_report_launching.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch Strata in Georef but not in Nominal Report ‚Äî strata_in_georef_but_not_in_nominal_report_launching","text":"Data frame containing upgraded nominal data.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/summarising_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarising_step ‚Äî summarising_step","title":"Summarising_step ‚Äî summarising_step","text":"function performs various summarizing steps data related species gear types, retrieving data database, processing , rendering output reports.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/summarising_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarising_step ‚Äî summarising_step","text":"","code":"summarising_step(   main_dir,   connectionDB,   config,   source_authoritylist = c(\"all\", \"IOTC\", \"WCPFC\", \"IATTC\", \"ICCAT\", \"CCSBT\"),   sizepdf = \"long\",   savestep = FALSE,   nameoutput = NULL,   usesave = FALSE )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/summarising_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarising_step ‚Äî summarising_step","text":"main_dir Character. main directory containing entities. (jobs/entities) connectionDB Object. database connection. config List. Configuration list containing metadata options processing. source_authoritylist Vector. Vector source_authority filter , \"\" . sizepdf Character string. La taille peut prendre les valeurs suivantes : \"long\" (par d√©faut) : Long coverage. \"middle\" : Long without coverage \"short\" : first characteristics, first differences main table steps savestep Logical TRUE/FALSE, .qs result saved ? nameoutput Character, name .qs saved usesave Logical use nameoutput .qs instead rerunning everything ?","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/summarising_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarising_step ‚Äî summarising_step","text":"NULL. function side effects, writing files rendering reports.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/summarising_step.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarising_step ‚Äî summarising_step","text":"","code":"if (FALSE) { # \\dontrun{ connectionDB <- DBI::dbConnect(RSQLite::SQLite(), \":memory:\") # Connexion temporaire config <- list() # Simule une configuration summarising_step(main_dir = \"chemin/vers/dossier\", connectionDB, config) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/tidying_GTA_data_for_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy GTA Data for Comparison ‚Äî tidying_GTA_data_for_comparison","title":"Tidy GTA Data for Comparison ‚Äî tidying_GTA_data_for_comparison","text":"function processes dataset joining spatial categorical data, standardizing measurement units, preparing analysis.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/tidying_GTA_data_for_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy GTA Data for Comparison ‚Äî tidying_GTA_data_for_comparison","text":"","code":"tidying_GTA_data_for_comparison(   dataframe,   shape = NULL,   species_group_dataframe = NULL,   cl_cwp_gear_level2_dataframe = NULL )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/tidying_GTA_data_for_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy GTA Data for Comparison ‚Äî tidying_GTA_data_for_comparison","text":"dataframe data frame file path (character) RDS file containing dataset. shape optional spatial data frame GRIDTYPE cwp_code column geographic matching. species_group_dataframe optional data frame mapping species groups. cl_cwp_gear_level2_dataframe optional data frame mapping gear types level 2 categories.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/tidying_GTA_data_for_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy GTA Data for Comparison ‚Äî tidying_GTA_data_for_comparison","text":"cleaned processed data frame standardized geographic identifiers, measurement units, additional categorical information external data frames.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/tidying_GTA_data_for_comparison.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy GTA Data for Comparison ‚Äî tidying_GTA_data_for_comparison","text":"dataframe file path, loaded using readRDS(). shape provided geographic_identifier exists dataframe, spatial join performed. species_group_dataframe provided species exists dataframe, species join performed. cl_cwp_gear_level2_dataframe provided gear_type exists dataframe, gear-type join performed. Measurement units standardized \"Tons\" \"Number fish\".","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/tidying_GTA_data_for_comparison.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy GTA Data for Comparison ‚Äî tidying_GTA_data_for_comparison","text":"","code":"if (FALSE) { # \\dontrun{ # Example dataset df <- data.frame(   geographic_identifier = c(\"5100000\", \"5100001\"),   species = c(\"YFT\", \"BET\"),   gear_type = c(\"03.1.0\", \"01.1.0\"),   measurement_unit = c(\"MT\", \"NO\"),   measurement_value = c(100, 200) )  shape_data <- data.frame(GRIDTYPE = c(\"1deg_x_1deg\", \"5deg_x_5deg\"), cwp_code = c(\"5100000\", \"5100001\")) species_mapping <- data.frame(species = c(\"YFT\", \"BET\"), species_group = c(\"Yellowfin Tuna\", \"Bigeye Tuna\")) gear_mapping <- data.frame(Code = c(\"03.1.0\", \"01.1.0\"), GearLevel2 = c(\"Purse Seine\", \"Longline\"))  # Run function cleaned_df <- tidying_GTA_data_for_comparison(df, shape_data, species_mapping, gear_mapping) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/tidying_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidying Data by Keeping Specific Columns ‚Äî tidying_data","title":"Tidying Data by Keeping Specific Columns ‚Äî tidying_data","text":"function tidies data frame selecting specified columns converting time columns character.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/tidying_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidying Data by Keeping Specific Columns ‚Äî tidying_data","text":"","code":"tidying_data(dataframe, parameter_colnames_to_keep_dataframe, time_dimension)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/tidying_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidying Data by Keeping Specific Columns ‚Äî tidying_data","text":"dataframe data frame tidy. parameter_colnames_to_keep_dataframe character vector column names keep. time_dimension character vector time dimension column names.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/tidying_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidying Data by Keeping Specific Columns ‚Äî tidying_data","text":"tidied data frame.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/time_coverage_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and Visualize Time Coverage ‚Äî time_coverage_analysis","title":"Calculate and Visualize Time Coverage ‚Äî time_coverage_analysis","text":"function calculates time coverage different dimensions provides visualizations values time dataset.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/time_coverage_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and Visualize Time Coverage ‚Äî time_coverage_analysis","text":"","code":"time_coverage_analysis(   time_dimension_list_groupped,   parameter_time_dimension,   titre_1,   titre_2,   unique_analyse = FALSE )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/time_coverage_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and Visualize Time Coverage ‚Äî time_coverage_analysis","text":"time_dimension_list_groupped list data frames, containing time dimension data. parameter_time_dimension time dimension parameter. titre_1 Title first dataset. titre_2 Title second dataset. unique_analyse Logical value indicating whether analysis unique.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/time_coverage_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and Visualize Time Coverage ‚Äî time_coverage_analysis","text":"list containing ggplot objects visualizing time coverage.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/time_coverage_analysis.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate and Visualize Time Coverage ‚Äî time_coverage_analysis","text":"Bastien Grasset, bastien.grasset@ird.fr","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/time_coverage_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and Visualize Time Coverage ‚Äî time_coverage_analysis","text":"","code":"if (FALSE) { # \\dontrun{ time_coverage_analysis(time_dimension_list_groupped, \"Year\", \"Dataset1\", \"Dataset2\", FALSE, \"path/to/save\") } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/time_coverage_analysis_dygraphs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and Visualize Time Coverage Using dygraphs ‚Äî time_coverage_analysis_dygraphs","title":"Calculate and Visualize Time Coverage Using dygraphs ‚Äî time_coverage_analysis_dygraphs","text":"function calculates time coverage different dimensions provides interactive visualizations values time dataset using dygraphs.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/time_coverage_analysis_dygraphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and Visualize Time Coverage Using dygraphs ‚Äî time_coverage_analysis_dygraphs","text":"","code":"time_coverage_analysis_dygraphs(   time_dimension_list_groupped,   parameter_time_dimension,   titre_1,   titre_2,   unique_analyse = FALSE )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/time_coverage_analysis_dygraphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and Visualize Time Coverage Using dygraphs ‚Äî time_coverage_analysis_dygraphs","text":"time_dimension_list_groupped list data frames, containing time dimension data. parameter_time_dimension time dimension parameter. titre_1 Title first dataset. titre_2 Title second dataset. unique_analyse Logical value indicating whether analysis unique.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/time_coverage_analysis_dygraphs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and Visualize Time Coverage Using dygraphs ‚Äî time_coverage_analysis_dygraphs","text":"list containing dygraphs objects visualizing time coverage.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/time_coverage_analysis_dygraphs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate and Visualize Time Coverage Using dygraphs ‚Äî time_coverage_analysis_dygraphs","text":"Bastien Grasset, bastien.grasset@ird.fr","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/time_coverage_analysis_dygraphs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate and Visualize Time Coverage Using dygraphs ‚Äî time_coverage_analysis_dygraphs","text":"","code":"if (FALSE) { # \\dontrun{ time_coverage_analysis_dygraphs(time_dimension_list_groupped, \"Year\", \"Dataset1\", \"Dataset2\", FALSE) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/timecoverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Time Coverage Analysis ‚Äî timecoverage","title":"Perform Time Coverage Analysis ‚Äî timecoverage","text":"function analyzes time coverage values specified time dimensions generates plots differences.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/timecoverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Time Coverage Analysis ‚Äî timecoverage","text":"","code":"timecoverage(   parameter_time_dimension,   unique_analyse,   titre_1 = \"titre_1\",   titre_2 = \"titre_2\",   time_dimension_list_groupped,   fig.path = \"figures\" )"},{"path":"https://bastienird.github.io/CWP.dataset/reference/timecoverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Time Coverage Analysis ‚Äî timecoverage","text":"parameter_time_dimension string representing time dimension. unique_analyse boolean flag indicating whether perform unique analysis. Defaults FALSE. titre_1 string representing title initial dataset. titre_2 string representing title final dataset. time_dimension_list_groupped list data frames representing grouped time dimensions. fig.path string representing path save figures.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/timecoverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Time Coverage Analysis ‚Äî timecoverage","text":"list containing following elements: time_dimension_list_groupped_diff_image_knit list knitted plots time dimension differences.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/timecoverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Time Coverage Analysis ‚Äî timecoverage","text":"","code":"if (FALSE) { # \\dontrun{ timecoverage(unique_analyse, parameter_time_dimension, titre_1, titre_2, time_dimension_list_groupped, fig.path) } # }"},{"path":"https://bastienird.github.io/CWP.dataset/reference/write_options_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write options to CSV and return structured output ‚Äî write_options_to_csv","title":"Write options to CSV and return structured output ‚Äî write_options_to_csv","text":"function writes CSV file containing options data column entity geoflow GTA workflows Additionally, returns structured list containing options renamed named list.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/write_options_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write options to CSV and return structured output ‚Äî write_options_to_csv","text":"","code":"write_options_to_csv(opts)"},{"path":"https://bastienird.github.io/CWP.dataset/reference/write_options_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write options to CSV and return structured output ‚Äî write_options_to_csv","text":"opts named list element vector options corresponding entity.","code":""},{"path":"https://bastienird.github.io/CWP.dataset/reference/write_options_to_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write options to CSV and return structured output ‚Äî write_options_to_csv","text":"list containing: options named list key options_<name> value concatenated string options. table data frame two columns: \"Options\" (names options) \"Position\" (concatenated values).","code":""},{"path":[]},{"path":"https://bastienird.github.io/CWP.dataset/news/index.html","id":"changelog-0-0-1","dir":"Changelog","previous_headings":"","what":"Changelog","title":"CWP.dataset 0.0.1","text":"Correction des conflits d‚Äôimport (data.table vs dplyr) Ajout d‚Äôune gestion conditionnelle pour dygraphs","code":""}]
